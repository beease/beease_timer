// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

enum Role {
  OWNER
  MEMBER
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  createdAt        DateTime          @default(now())
  name             String?
  given_name       String
  family_name      String?
  email            String            @unique
  verified_email   Boolean           @default(false)
  picture          String?
  locale           String?
  google_id        String?           @unique
  credential       Credential?       @relation(fields: [credentialId], references: [id])
  credentialId     String            @unique
  memberWorkspaces memberWorkspace[]
}

model Credential {
  id       String @id @default(cuid())
  user     User?
  password String
}

model Workspace {
  id               String            @id @default(cuid())
  createdAt        DateTime          @default(now())
  name             String
  projects         Project[]
  color            String
  membersWorkspace memberWorkspace[]
}

model Project {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now())
  name           String
  description    String?
  workspace      Workspace       @relation(fields: [workspaceId], references: [id])
  workspaceId    String
  memberSessions memberSession[]
  dailyPrice     Float           @default(0)
  hourByDay      Float           @default(0)
  color          String
}

model memberWorkspace {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now())
  role           Role            @default(MEMBER)
  workspace      Workspace       @relation(fields: [workspaceId], references: [id])
  workspaceId    String
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  memberSessions memberSession[]
}

model memberSession {
  id                String           @id @default(cuid())
  createdAt         DateTime         @default(now())
  Project           Project?         @relation(fields: [projectId], references: [id])
  projectId         String?
  memberWorkspace   memberWorkspace? @relation(fields: [memberWorkspaceId], references: [id])
  memberWorkspaceId String?
}
